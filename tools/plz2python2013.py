#!/usr/bin/env python
# -*- coding: utf-8 -*-

# parse new style OpenGeoDB data files

from pprint import pformat
import sys
import os.path
import pygeodb.plzdata

geodata = {}

# This assumes input files like DE.tab, AT.tab or CH.tab
country = os.path.splitext(os.path.basename(sys.argv[1]))[0]

for line in open(sys.argv[1], 'rb'):
    line = line.decode('utf-8').strip()
    if line[0] == "#" or not line:
        continue

    values = line.split('\t')

    # #loc_id ags     ascii   name    lat     lon     amt     plz     vorwahl einwohner       flaeche kz      typ     level   of      i
    # 105     D       DEUTSCHLAND     Bundesrepublik Deutschland      51.16766        10.42498                                82169000
    # 80076   16076087        KLEINWOLSCHENDORF       Kleinwolschendorf                                                                               8       26599   0

    # sys.stderr.write("%r\n" % values)

    # Feld 1: eindeutiger Schl√ºssel (Primary Key)
    # Felder 2 bis 8: hierarchische Verwaltungsgliederung, hier:
    #      Feld  2: ?
    #      Feld  3: NAME
    #      Feld  4: name
    #      Feld  5: lat
    #      Feld  6: lon
    #      Feld  7: Verwaltungsbezirk
    #      Feld  8: Postleitzahl
    #      Feld  9: vorwahl
    #      Feld 10: einwohner
    #      Feld 11: flaeche
    #      Feld 12: kz
    #      Feld 13: typ
    #      Feld 14: level
    #      Feld 15: of
    #      Feld 16: i

    if len(values) < 10:
        continue
    zipcode = str(values[7])
    if (len(zipcode) != 5 and country == 'DE') or len(zipcode) != 4:
        continue
    if not values[4].strip():  # keine koordinaten
        continue
    city = values[3]
    longitude = float(values[5])
    latitude = float(values[4])
    if country not in geodata:
        geodata[country] = {}
    geodata[country][zipcode] = (longitude, latitude, city)

geodata.update(pygeodb.plzdata.geodata)

outfile = open(sys.argv[2], 'wb')
outfile.write("# -*- coding: utf-8 -*-\n".encode('utf-8'))
outfile.write("# autogenerated - do not edit\n".encode('utf-8'))
outfile.write("geodata = ".encode('utf-8'))
outfile.write(pformat(geodata).encode('utf-8'))
